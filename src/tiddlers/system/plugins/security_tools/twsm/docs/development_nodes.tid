created: 20210722235834504
modified: 20210725065432583
tags: 
title: $:/plugins/security_tools/twsm/docs/development_nodes
type: text/vnd.tiddlywiki

!! Field Manipulation


I can use JavaScript macros to check and calculate information from fields at edit and runtime.
However, this approach means that I am unable to efficiently filter against this calculated information.  

A better approach is to hook the tiddler save event. 
This provides access to all a tiddlers fields and the ability to modify them before they are saved.

An example can be found here:

https://github.com/WeilerWebServices/Bootstrap/blob/392e18304d2f2e270a8f8cf8c68cfb93091ea5a1/TiddlyWiki5/plugins/tiddlywiki/savetrail/savetrail.js

Pseudocode:

# Hook the on save event
# For events where field `twsm_class` == risk
# Read `twsm_impact`, `twsm_likelihood`, `twsm_mitigation`
# Calculate and set `twsm_risk_score`, `twsm_risk_class`, `twsm_risk_level`
# On success clear 'twsm_risk_calculation_error'
# On error set 'twsm_risk_calculation_error'

!! Controls

I've been pondering this for a while.

The various frameworks each have their own approach.

A set of mutually exclusive categories (i.e. one value per security control) is a good start.
For example:

* Temporal Classification
** Preventative Controls
** Detective Controls
** Corrective Controls
* Characteristic Classification
** Physical Controls
** Procedural Controls
** Technical Controls

This bit needs to be simple - because we are going to assert that ''every'' control has them.
